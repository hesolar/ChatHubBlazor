@page "/"
@inject NavigationManager NavManager

<h1>Hello, @(playerName ?? "Unknown")!</h1>


@{ <p> @(playerName == null ? "Welcome to the brand new minesweeper." : "Are you ready?" )</p>}
 

    <br />


    @* introducir nombre del jugador 1º estado*@
    @if( State == States.IntroducirNombre ) {
        <h2>PLAYER NAME</h2>
        <input placeholder="Enter Player Name" type="text" @bind="playerName" />
        <button @onclick="() => State = States.Config">OK</button>
    }

    @* introducir configuracion partida 2º estado*@
    @if( State == States.Config ) {
        <h2> Now its time to create the room !</h2>
        <label for="rows"> Nº Rows</label>
        <input type="number" id="rows" @bind="rows"  />
        <button @onclick="@GoToRoom" > Create Room  </button>

        //este boton me ha humillao pq no se le puede pasar un string
        @*<button @onclick="()=>NavManager.NavigateTo("/Room")"> Create Room  </button>*@
        //el caso que este muchacho dice q esto no se vale

    }




    @code{
        //state0 params: Introducir nombre
        public enum States { IntroducirNombre, Config }
        public States State { get; set; } = States.IntroducirNombre;
        public string playerName;
        //state1 params: Config room
        public int rows=10;
        public string roomId;


        public void GoToRoom() {
            roomId = RoomCoderGenerator(5);
            NavManager.NavigateTo($"/Room/?roomId={roomId}&rows={rows}");
        }



        public string RoomCoderGenerator( int length ) {
            Random random = new Random();
            string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            return new string(Enumerable.Repeat(chars,length)
              .Select(s => s[random.Next(s.Length)]).ToArray());
        }

    }